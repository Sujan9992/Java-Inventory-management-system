/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package IIC;

// Importing all the necessary packages
import static java.awt.event.KeyEvent.VK_BACK_SPACE;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Nikit Dahal, Sujan Basnet, Sujan Chaudhary, Sujan Thapa
 */
public class Appliances_Info extends javax.swing.JFrame {

    /**
     * Creates new form Appliances_Info
     */
    // Creating an ArrayList
    private ArrayList<AppliancesData> list = new ArrayList();

    public Appliances_Info() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        modelButtonGroup = new javax.swing.ButtonGroup();
        framePanel = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        categorySearch = new javax.swing.JButton();
        categoryCmb1 = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        searchApplianceBtn = new javax.swing.JButton();
        searchPriceTxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        addBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        exitBtn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        rad3 = new javax.swing.JRadioButton();
        productCode = new javax.swing.JLabel();
        rad2 = new javax.swing.JRadioButton();
        categoryCmb = new javax.swing.JComboBox<>();
        model = new javax.swing.JLabel();
        priceTxt = new javax.swing.JTextField();
        brand = new javax.swing.JLabel();
        brandTxt = new javax.swing.JTextField();
        platformTxt = new javax.swing.JTextField();
        platform = new javax.swing.JLabel();
        price = new javax.swing.JLabel();
        productTxt = new javax.swing.JTextField();
        category = new javax.swing.JLabel();
        nameTxt = new javax.swing.JTextField();
        rad1 = new javax.swing.JRadioButton();
        name = new javax.swing.JLabel();
        tablePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableInfo = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        exitMenuItem = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        saveMenuItem = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Computer Inventory System");
        setResizable(false);

        framePanel.setBackground(new java.awt.Color(63, 100, 126));

        jPanel3.setBackground(new java.awt.Color(63, 100, 126));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Search", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 2, 14), new java.awt.Color(102, 255, 102))); // NOI18N

        jPanel4.setBackground(new java.awt.Color(63, 100, 126));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "By Category", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(102, 255, 255))); // NOI18N

        categorySearch.setBackground(new java.awt.Color(153, 255, 153));
        categorySearch.setForeground(new java.awt.Color(102, 102, 255));
        categorySearch.setText("Appliances available in category");
        categorySearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categorySearchActionPerformed(evt);
            }
        });

        categoryCmb1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Desktop", "Gaming", "2-in-1", "MacBook", "ChromeBook" }));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(categoryCmb1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(categorySearch, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(categorySearch)
                    .addComponent(categoryCmb1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(63, 100, 126));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "By Price", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(102, 204, 255))); // NOI18N

        searchApplianceBtn.setBackground(new java.awt.Color(153, 255, 153));
        searchApplianceBtn.setForeground(new java.awt.Color(63, 100, 126));
        searchApplianceBtn.setText("Search Appliance");
        searchApplianceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchApplianceBtnActionPerformed(evt);
            }
        });

        searchPriceTxt.setForeground(new java.awt.Color(63, 100, 126));
        searchPriceTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchPriceTxtMouseClicked(evt);
            }
        });
        searchPriceTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchPriceTxtKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchPriceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(searchApplianceBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchPriceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchApplianceBtn))
                .addGap(0, 9, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        jLabel1.setFont(new java.awt.Font("Calibri Light", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 255, 102));
        jLabel1.setText("Computer Inventory System");

        jPanel2.setBackground(new java.awt.Color(63, 100, 126));
        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        addBtn.setBackground(new java.awt.Color(153, 255, 153));
        addBtn.setForeground(new java.awt.Color(102, 102, 255));
        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        clearBtn.setBackground(new java.awt.Color(153, 255, 153));
        clearBtn.setForeground(new java.awt.Color(102, 102, 255));
        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        exitBtn.setBackground(new java.awt.Color(153, 255, 153));
        exitBtn.setForeground(new java.awt.Color(102, 51, 255));
        exitBtn.setText("Exit");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(exitBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(clearBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addBtn)
                .addGap(18, 18, 18)
                .addComponent(clearBtn)
                .addGap(18, 18, 18)
                .addComponent(exitBtn)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(63, 100, 126));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Product Form", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 2, 14), new java.awt.Color(102, 255, 102))); // NOI18N
        jPanel1.setFont(new java.awt.Font("Verdana", 2, 12)); // NOI18N

        modelButtonGroup.add(rad3);
        rad3.setForeground(new java.awt.Color(51, 255, 204));
        rad3.setText("High");

        productCode.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        productCode.setForeground(new java.awt.Color(51, 255, 204));
        productCode.setText("Product ID:");

        modelButtonGroup.add(rad2);
        rad2.setForeground(new java.awt.Color(0, 255, 204));
        rad2.setText("Medium");
        rad2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rad2MouseClicked(evt);
            }
        });

        categoryCmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Desktop", "Gaming", "2-in-1", "MacBook", "ChromeBook" }));
        categoryCmb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                categoryCmbMouseClicked(evt);
            }
        });

        model.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        model.setForeground(new java.awt.Color(51, 255, 204));
        model.setText("Model-Range");

        priceTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                priceTxtMouseClicked(evt);
            }
        });
        priceTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                priceTxtKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                priceTxtKeyTyped(evt);
            }
        });

        brand.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        brand.setForeground(new java.awt.Color(51, 255, 204));
        brand.setText("Brand:");

        brandTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                brandTxtMouseClicked(evt);
            }
        });

        platformTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                platformTxtMouseClicked(evt);
            }
        });

        platform.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        platform.setForeground(new java.awt.Color(51, 255, 204));
        platform.setText("Platform:");

        price.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        price.setForeground(new java.awt.Color(51, 255, 204));
        price.setText("Price:");

        productTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productTxtMouseClicked(evt);
            }
        });
        productTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                productTxtKeyTyped(evt);
            }
        });

        category.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        category.setForeground(new java.awt.Color(51, 255, 204));
        category.setText("Category:");

        nameTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nameTxtMouseClicked(evt);
            }
        });

        modelButtonGroup.add(rad1);
        rad1.setForeground(new java.awt.Color(51, 255, 204));
        rad1.setSelected(true);
        rad1.setText("Low");
        rad1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rad1ActionPerformed(evt);
            }
        });

        name.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        name.setForeground(new java.awt.Color(51, 255, 204));
        name.setText("Name:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(model)
                        .addGap(18, 18, 18)
                        .addComponent(rad1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rad2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rad3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(productCode)
                            .addComponent(name)
                            .addComponent(category)
                            .addComponent(brand)
                            .addComponent(platform)
                            .addComponent(price))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(brandTxt)
                            .addComponent(categoryCmb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nameTxt)
                            .addComponent(productTxt)
                            .addComponent(platformTxt)
                            .addComponent(priceTxt))))
                .addGap(14, 14, 14))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(productCode)
                    .addComponent(productTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name)
                    .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(category)
                    .addComponent(categoryCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(brand)
                    .addComponent(brandTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(model)
                    .addComponent(rad1)
                    .addComponent(rad2)
                    .addComponent(rad3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(platformTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(platform))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(price)
                    .addComponent(priceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35))
        );

        tablePanel.setBackground(new java.awt.Color(63, 100, 126));

        tableInfo.setBackground(new java.awt.Color(0, 51, 51));
        tableInfo.setForeground(new java.awt.Color(51, 255, 204));
        tableInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Product ID", "Name", "Category", "Brand", "Model-Range", "Platform", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableInfo);

        javax.swing.GroupLayout tablePanelLayout = new javax.swing.GroupLayout(tablePanel);
        tablePanel.setLayout(tablePanelLayout);
        tablePanelLayout.setHorizontalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 596, Short.MAX_VALUE)
                .addContainerGap())
        );
        tablePanelLayout.setVerticalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tablePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout framePanelLayout = new javax.swing.GroupLayout(framePanel);
        framePanel.setLayout(framePanelLayout);
        framePanelLayout.setHorizontalGroup(
            framePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(framePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(framePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(framePanelLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, framePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(295, 295, 295))
        );
        framePanelLayout.setVerticalGroup(
            framePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(framePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(framePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(framePanelLayout.createSequentialGroup()
                        .addComponent(tablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(framePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(framePanelLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(framePanelLayout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        exitMenuItem.setText("File");

        openMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        openMenuItem.setText("Open");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });
        exitMenuItem.add(openMenuItem);
        exitMenuItem.add(jSeparator1);

        saveMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        saveMenuItem.setText("Save");
        saveMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuItemActionPerformed(evt);
            }
        });
        exitMenuItem.add(saveMenuItem);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Exit");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        exitMenuItem.add(jMenuItem2);

        jMenuBar1.add(exitMenuItem);

        jMenu3.setText("Help");

        aboutMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        aboutMenuItem.setText("About");
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemActionPerformed(evt);
            }
        });
        aboutMenuItem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                aboutMenuItemKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                aboutMenuItemKeyTyped(evt);
            }
        });
        jMenu3.add(aboutMenuItem);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(framePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(framePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Method to open csv file
    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed
        // TODO add your handling code here:
        try {
            // Creating an object of defaultModelTable
            DefaultTableModel model = (DefaultTableModel) tableInfo.getModel();
            model.setRowCount(0); // set row count to 0
            BufferedReader br = new BufferedReader(new FileReader("data.csv"));
            String row = "";
            while ((row = br.readLine()) != null) {
                String[] value = row.split(","); // Splittng the values of csv files
                model.addRow(value); // adding the values to table
                AppliancesData rows = new AppliancesData(value[0], value[1], value[2], value[3], value[4], value[5], value[6]);
                list.add(rows); // adding the values from csv to list
            }
        } catch (FileNotFoundException e) {
            JOptionPane.showMessageDialog(rootPane, "File not found.", "Error", 0);
        } catch (IOException e) {
            JOptionPane.showMessageDialog(rootPane, "IO Exception Found.", "Error", 0);
        }
        JOptionPane.showMessageDialog(rootPane, "File loaded Successfully.", "Information", 1);
    }//GEN-LAST:event_openMenuItemActionPerformed

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        // TODO add your handling code here:
        int option = JOptionPane.showConfirmDialog(null, "Are you sure you want to close"
                + " the application?", "Close Program", JOptionPane.YES_NO_OPTION);
        if (option == 0) {
            System.exit(0);
        }
    }//GEN-LAST:event_exitBtnActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        int option = JOptionPane.showConfirmDialog(null, "Are you sure you want to close"
                + " the application?", "Close Program", JOptionPane.YES_NO_OPTION);
        if (option == 0) {
            System.exit(0);
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void rad1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rad1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rad1ActionPerformed

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(rootPane, ""
                + "                                     About this App."
                + "\n                         Computer Inventory System"
                + "\n                                         V1.0"
                + "\n                                Developed by-->"
                + "\n Sujan Thapa, Sujan Chaudhary, Sujan Basnet and Nikit Dahal."
                + "\n It stores the appliances info of Computer Inventory System."
                + "\n It can store computer details according to its respective category."
                + "\n Computers can be stored on the basis of quality features."
                + "\n Available products can be searched by category and price.",
                "About", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_aboutMenuItemActionPerformed

    private void aboutMenuItemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_aboutMenuItemKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_aboutMenuItemKeyPressed

    private void aboutMenuItemKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_aboutMenuItemKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_aboutMenuItemKeyTyped

    private void clearScreen() {
        // Clearing all the textfields
        productTxt.setText("");
        nameTxt.setText("");
        categoryCmb.setSelectedIndex(0);
        brandTxt.setText("");
        rad1.setSelected(true);
        platformTxt.setText("");
        priceTxt.setText("");
    }

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        // TODO add your handling code here:
        // Calling clearScreen method
        clearScreen();
    }//GEN-LAST:event_clearBtnActionPerformed

    private void priceTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceTxtKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceTxtKeyPressed

    private void priceTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceTxtKeyTyped
        // TODO add your handling code here:
        // get key typed from key event
        char key = evt.getKeyChar();
        if (!((key >= '0') && (key <= '9') || key == VK_BACK_SPACE)) {
            evt.consume(); // consume the key
        }
    }//GEN-LAST:event_priceTxtKeyTyped

    private void productTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_productTxtKeyTyped
        // TODO add your handling code here:
        char key = evt.getKeyChar();
        if (!((key >= '0') && (key <= '9') || key == VK_BACK_SPACE)) {
            evt.consume();
        }
    }//GEN-LAST:event_productTxtKeyTyped

    private void productTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productTxtMouseClicked
        // TODO add your handling code here:
        productTxt.setText("");
    }//GEN-LAST:event_productTxtMouseClicked

    private void nameTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nameTxtMouseClicked
        // TODO add your handling code here:
        nameTxt.setText("");
    }//GEN-LAST:event_nameTxtMouseClicked

    private void categoryCmbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_categoryCmbMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_categoryCmbMouseClicked

    private void brandTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_brandTxtMouseClicked
        // TODO add your handling code here:
        brandTxt.setText("");
    }//GEN-LAST:event_brandTxtMouseClicked

    private void rad2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rad2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_rad2MouseClicked

    private void platformTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_platformTxtMouseClicked
        // TODO add your handling code here:
        platformTxt.setText("");
    }//GEN-LAST:event_platformTxtMouseClicked

    private void priceTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_priceTxtMouseClicked
        // TODO add your handling code here:
        priceTxt.setText("");
    }//GEN-LAST:event_priceTxtMouseClicked

    private void searchPriceTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchPriceTxtKeyTyped
        // TODO add your handling code here:
        char key = evt.getKeyChar();
        if (!((key >= '0') && (key <= '9') || key == VK_BACK_SPACE)) {
            evt.consume();
        }
    }//GEN-LAST:event_searchPriceTxtKeyTyped

    private void searchPriceTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchPriceTxtMouseClicked
        // TODO add your handling code here:
        searchPriceTxt.setText("");
    }//GEN-LAST:event_searchPriceTxtMouseClicked

    public void loadToCsv() {
        try {
            File file = new File("inventory.csv"); // create a csv file
            if (!file.isFile()) {
                file.createNewFile();
            }
            FileWriter wr = new FileWriter(file);
            for (AppliancesData s : list) { // using for each loop to store the data on csv file
                String value[] = {s.getProductNo(), s.getProductName(), s.getProductCategory(), s.getProductBrand(), s.getProductModel(), s.getProductPlatform(), s.getProductPrice()};
                for (int i = 0; i < value.length; i++) {
                    wr.append(value[i]); // append the value to csv file
                    if (i == value.length - 1) {
                        break;
                    }
                    wr.append(","); // split values using comma
                }
                wr.append("\n"); // split rows using new line character
            }
            wr.flush();
            wr.close(); // close the file writer
        } catch (IOException e) {
        }
    }

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        try {
            // get values from form
            String productNo = productTxt.getText().trim();
            String productName = nameTxt.getText().trim();
            String productCategory = categoryCmb.getSelectedItem().toString();
            String productBrand = brandTxt.getText().trim();
            String productModel;
            String productPlatform = platformTxt.getText().trim();
            String productPrice = priceTxt.getText().trim();

            if (rad1.isSelected()) {
                productModel = "Low";
            } else if (rad2.isSelected()) {
                productModel = "Meduim";
            } else {
                productModel = "High";
            }
            // Checking if values are empty or not
            if (!productNo.isEmpty() && !productName.isEmpty() && !productBrand.isEmpty() && !productPlatform.isEmpty() && !productPrice.isEmpty()) {
                // Checking price validity
                if (Integer.parseInt(productPrice) > 9999 && Integer.parseInt(productPrice) < 999999) {
                    for (AppliancesData s : list) {
                        // Checking repeated value of product no.
                        if (productNo.equals(s.getProductNo())) {
                            JOptionPane.showMessageDialog(rootPane, "The product with same product ID is already on the table.", "Error", 0);
                            return;
                        }
                    }

                    int rowCount = tableInfo.getRowCount(); //returns the row count of the table
                    int nextRow = 0; //to denote an empty row's index
                    boolean emptyRowFlag = false; //indicates whether an empty row has been found or not
                    String s;

                    do {
                        s = (String) tableInfo.getValueAt(nextRow, 0);

                        if (s != null && s.length() != 0) {
                            nextRow++;
                        } else {
                            emptyRowFlag = true;
                        }
                    } while (nextRow < rowCount && !emptyRowFlag);

                    if (emptyRowFlag) {
                        int colCount = tableInfo.getColumnCount(); //returns number of columns
                        String value[] = {productNo, productName, productCategory, productBrand, productModel, productPlatform, productPrice};

                        AppliancesData row = new AppliancesData(productNo, productName, productCategory, productBrand, productModel, productPlatform, productPrice);
                        list.add(row);

                        for (int i = 0; i < colCount; i++) {
                            tableInfo.setValueAt(value[i], nextRow, i);
                        }
                        JOptionPane.showMessageDialog(rootPane, "Product added successfully.", "Message", 1);
                        clearScreen(); // Clear text fields after adding the values to table
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Empty row not available.", "Error", 0);
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "The price is allowed on the range of Rs. 9999-999999.", "Error", 0);
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Please fill all the text fields.", "Error", 0);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Error retrieving data. Check your input.", "Error", 0);
        }
    }//GEN-LAST:event_addBtnActionPerformed

    private static int binarySearch(ArrayList<AppliancesData> sortedList, int low, int high, int priceValue) {
        if (low <= high) {
            int mid = (high + low) / 2;
            // get mid value from index from list
            int midValue = Integer.parseInt(sortedList.get(mid).getProductPrice());

            if (midValue == priceValue) {
                return mid;
            } else if (midValue < priceValue) {
                return binarySearch(sortedList, mid + 1, high, priceValue);
            } else {
                return binarySearch(sortedList, low, mid - 1, priceValue);
            }
        } else {
            return -1;
        }
    }

    private static void sort(ArrayList<AppliancesData> unsortedList) {
        if (unsortedList.size() <= 1) { // checking array size
            return;
        }
        int n = unsortedList.size() / 2; // getting mid value
        int m = unsortedList.size() - n; // getting last index
        ArrayList<AppliancesData> first = new ArrayList(); //creating variable of pojo class
        ArrayList<AppliancesData> second = new ArrayList();
        for (int i = 0; i < n; i++) {
            first.add(unsortedList.get(i)); // adding to mid point element
        }
        for (int i = 0; i < m; i++) {
            second.add(unsortedList.get(first.size() + i));
        }
        sort(first); // recursion on first half of array
        sort(second);
        merge(first, second, unsortedList);
    }

    private static void merge(ArrayList<AppliancesData> first, ArrayList<AppliancesData> second, ArrayList<AppliancesData> unsortedList) {
        int iFirst = 0;
        int iSecond = 0;
        int j = 0;
        while (iFirst < first.size() && iSecond < second.size()) { // checking if atomic or not
            if (Integer.parseInt(first.get(iFirst).getProductPrice()) < Integer.parseInt(second.get(iSecond).getProductPrice())) {
                unsortedList.set(j, first.get(iFirst)); // swapping element
                iFirst++;
            } else {
                unsortedList.set(j, second.get(iSecond));
                iSecond++;
            }
            j++;
        }
        while (iFirst < first.size()) {
            unsortedList.set(j, first.get(iFirst));
            iFirst++;
            j++;
        }
        while (iSecond < second.size()) {
            unsortedList.set(j, second.get(iSecond));
            iSecond++;
            j++;
        }
    }

    private void searchApplianceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchApplianceBtnActionPerformed
        // TODO add your handling code here:
        if (searchPriceTxt.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Please input a price in search box", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                sort(list); // sorting the list
                String priceSearch = searchPriceTxt.getText().trim(); // getting value from search text field
                int searchValue = Integer.parseInt(priceSearch); // typecasting string value to integer
                int index = binarySearch(list, 0, list.size() - 1, searchValue); // passing argument to binary search
                if (index == -1) {
                    JOptionPane.showMessageDialog(rootPane, "No details available for price Rs." + searchValue, "Search result", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(rootPane, "The details available for searched price Rs: "
                            + "" + searchValue + "\nThe Product No is: " + list.get(index).getProductNo() + "\nThe Product name is: "
                            + " " + list.get(index).getProductName() + "\nThe product category is: " + list.get(index).getProductCategory() + "\nThe product brand is: "
                            + list.get(index).getProductBrand() + "\nThe product model range is: " + list.get(index).getProductModel() + "\nThe product platform is: "
                            + list.get(index).getProductPlatform(), "Search Result", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (NumberFormatException e) {//
                JOptionPane.showMessageDialog(rootPane, "Please enter number only in the search field", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_searchApplianceBtnActionPerformed

    private void categorySearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categorySearchActionPerformed
        // TODO add your handling code here:
        String availableItems = ""; // variable to store items name
        int itemCount = 0;
        int listIndex = 0;
        try {
            if (list.size() > 0) { // checking the size of the list
                while (listIndex < list.size()) {
                    if (categoryCmb1.getSelectedItem().toString().equals(list.get(listIndex).getProductCategory())) {
                        availableItems += list.get(listIndex).getProductName() + "\n";
                        itemCount++;
                    }
                    listIndex++;
                }
                switch (itemCount) {
                    case 0:
                        JOptionPane.showMessageDialog(rootPane, "There are no Items available on " + categoryCmb1.getSelectedItem().toString().trim() + " category.", "Search Result", JOptionPane.INFORMATION_MESSAGE);
                        return;
                    case 1:
                        JOptionPane.showMessageDialog(rootPane, "There is " + itemCount + " item available on " + categoryCmb1.getSelectedItem() + " category." + " \n" + availableItems, "Search Result", JOptionPane.INFORMATION_MESSAGE);
                        break;
                    default:
                        JOptionPane.showMessageDialog(rootPane, "There are " + itemCount + " items available on " + categoryCmb1.getSelectedItem() + " category." + " \n" + availableItems, "Search Result", JOptionPane.INFORMATION_MESSAGE);
                        break;
                }

            }else{
                JOptionPane.showMessageDialog(rootPane, "Item not available.", "Error", 0);
            }
        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(rootPane, "There are no items available in Store on this category.", "Search Result", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_categorySearchActionPerformed

    private void saveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuItemActionPerformed
        // TODO add your handling code here:
        loadToCsv(); // calling LoadToCsv() method
        JOptionPane.showMessageDialog(rootPane, "The product details has been successfully saved.", "Message", 1);
    }//GEN-LAST:event_saveMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Appliances_Info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Appliances_Info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Appliances_Info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Appliances_Info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Appliances_Info().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JButton addBtn;
    private javax.swing.JLabel brand;
    private javax.swing.JTextField brandTxt;
    private javax.swing.JLabel category;
    private javax.swing.JComboBox<String> categoryCmb;
    private javax.swing.JComboBox<String> categoryCmb1;
    private javax.swing.JButton categorySearch;
    private javax.swing.JButton clearBtn;
    private javax.swing.JButton exitBtn;
    private javax.swing.JMenu exitMenuItem;
    private javax.swing.JPanel framePanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JLabel model;
    private javax.swing.ButtonGroup modelButtonGroup;
    private javax.swing.JLabel name;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JLabel platform;
    private javax.swing.JTextField platformTxt;
    private javax.swing.JLabel price;
    private javax.swing.JTextField priceTxt;
    private javax.swing.JLabel productCode;
    private javax.swing.JTextField productTxt;
    private javax.swing.JRadioButton rad1;
    private javax.swing.JRadioButton rad2;
    private javax.swing.JRadioButton rad3;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JButton searchApplianceBtn;
    private javax.swing.JTextField searchPriceTxt;
    private javax.swing.JTable tableInfo;
    private javax.swing.JPanel tablePanel;
    // End of variables declaration//GEN-END:variables
}
